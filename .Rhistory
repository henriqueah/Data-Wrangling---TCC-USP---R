format_df__receita_md2 <- format_df__receita_md2 %>%
mutate(Codigo = as.character(Codigo))
glimpse(format_df__receita_md2)
format_df__receita_md2 <-  format_df__receita_md2 %>%
select(-c(Referencia, TITULO ))
format_df__receita_md2 <- format_df__receita_md2 %>%
mutate(FONTE = case_when(
str_detect(FONTE, "LDO-2023") ~ "LDO-2023",
str_detect(FONTE, "LDO-2022") ~ "LDO-2022",
str_detect(FONTE, "LDO-2021") ~ "LDO-2021",
str_detect(FONTE, "LDO-2020") ~ "LDO-2020",
str_detect(FONTE, "LDO-2019") ~ "LDO-2019",
str_detect(FONTE, "LDO-2018") ~ "LDO-2018",
str_detect(FONTE, "LDO-2017") ~ "LDO-2017",
str_detect(FONTE, "LDO-2016") ~ "LDO-2016",
TRUE ~ FONTE
))
View(format_df__receita_md2)
receita_md_join <- left_join(format_df__receita_md, format_df__receita_md2, by = "Codigo")
View(receita_md_join)
View(receita_md_join)
# importação e formatação da tabela de despesa orçamento MD
df_despesa_md <- read_csv("Despesa GOV Invest Anexo IV.csv")
f_despesa_md <-  df_despesa_md %>%
select(-c(`SKU REF.`, FA, `ORGAO ORCAMENTARIO`, TITULO ))
View(df_despesa_md)
# importação e formatação da tabela de despesa orçamento MD
df_despesa_md <- read_csv("Despesa_por_Un._TipoI.csv")
View(df_despesa_md)
f_despesa_md <-  df_despesa_md %>%
select(-c(`SKU REF.`, FA , `ORGAO ORCAMENTARIO`, TITULO ))
View(f_despesa_md)
# importação e formatação da tabela de despesa orçamento MD
df_despesa_md <- read_csv("Despesa_por_Un._TipoI.csv")
f_despesa_md <-  df_despesa_md %>%
select(-c(`SKU REF.`, FA , `ORGAO ORCAMENTARIO`, TITULO, FONTE ))
View(f_despesa_md)
#View(f_despesa_md)
f_despesa_md <- f_despesa_md %>%
rename(Despesa = TOTAL,
`Codigo 2-9` = `TOTAL 2-9`,
Receita = VALOR)
#View(f_despesa_md)
f_despesa_md <- f_despesa_md %>%
rename(Despesa = TOTAL,
`Codigo 2-9` = `TOTAL 2-9`)
View(f_despesa_md)
# importação e formatação da tabela de despesa orçamento MD
df_despesa_md <- read_csv("Despesa_por_Un._TipoI.csv")
#View(df_despesa_md)
f_despesa_md <-  df_despesa_md %>%
select(-c(`SKU REF.`, FA , `ORGAO ORCAMENTARIO`, TITULO, FONTE ))
#View(f_despesa_md)
f_despesa_md <- f_despesa_md %>%
rename(Despesa = TOTAL,
`Despesa 2-9` = `TOTAL 2-9`)
View(f_despesa_md)
View(f_despesa_md)
# importação e formatação da tabela de despesa orçamento MD
df_despesa_md <- read_csv("Despesa_por_Un._TipoI.csv")
#View(df_despesa_md)
f_despesa_md <-  df_despesa_md %>%
select(-c(`SKU REF.`, FA , `ORGAO ORCAMENTARIO`, TITULO, FONTE ))
#View(f_despesa_md)
f_despesa_md <- f_despesa_md %>%
rename(Codigo = SKU,
Despesa = TOTAL,
`Despesa 2-9` = `TOTAL 2-9`)
View(f_despesa_md)
md_receita_despesa <- left_join(format_df__receita_md, f_despesa_md, by = "Codigo" & "EXERCICIO FINANCEIRO")
md_receita_despesa <- left_join(format_df__receita_md, f_despesa_md, by = "Codigo" AND "EXERCICIO FINANCEIRO")
md_receita_despesa <- left_join(format_df__receita_md, f_despesa_md, by = c("Codigo", "EXERCICIO FINANCEIRO"))
View(f_despesa_md)
View(format_df__receita_md)
md_receita_despesa <- left_join(format_df__receita_md, f_despesa_md, by = c("Codigo", "EXERCICIO FINANCEIRO"))
md_receita_despesa <- inner_join(format_df__receita_md, f_despesa_md, by = c("Codigo", "EXERCICIO FINANCEIRO"))
# importação e formatação da tabela de despesa orçamento MD
df_despesa_md <- read_csv("Despesa_por_Un._TipoI.csv")
f_despesa_md <- df_despesa_md %>%
rename(Codigo = SKU,
Despesa = TOTAL,
`Despesa 2-9` = `TOTAL 2-9`)
f_despesa_md <- df_despesa_md %>%
mutate(Codigo = as.character(Codigo))
View(f_despesa_md)
glimpse(f_despesa_md)
f_despesa_md <- df_despesa_md %>%
mutate(Codigo = as.character(Codigo))
# importação e formatação da tabela de despesa orçamento MD
df_despesa_md <- read_csv("Despesa_por_Un._TipoI.csv")
View(df_despesa_md)
View(df_despesa_md)
f_despesa_md <- df_despesa_md %>%
rename(Codigo = SKU,
Despesa = TOTAL,
`Despesa 2-9` = `TOTAL 2-9`)
View(f_despesa_md)
View(f_despesa_md)
f_despesa_md <- df_despesa_md %>%
mutate(Codigo = as.character(Codigo))
f_despesa_md <- f_despesa_md %>%
mutate(Codigo = as.character(Codigo))
glimpse(f_despesa_md)
f_despesa_md <-  df_despesa_md %>%
select(-c(`SKU REF.`, FA , `ORGAO ORCAMENTARIO`, TITULO, FONTE ))
View(f_despesa_md)
md_receita_despesa <- inner_join(format_df__receita_md, f_despesa_md, by = c("Codigo", "EXERCICIO FINANCEIRO"))
md_receita_despesa <- left_join(format_df__receita_md, f_despesa_md, by = c("Codigo", "EXERCICIO FINANCEIRO"))
md_receita_despesa <- full_join(format_df__receita_md, f_despesa_md, by = c("Codigo", "EXERCICIO FINANCEIRO"))
View(f_despesa_md)
View(f_despesa_md)
# importação e formatação da tabela de despesa orçamento MD
df_despesa_md <- read_csv("Despesa_por_Un._TipoI.csv")
f_despesa_md <- df_despesa_md %>%
rename(Codigo = SKU,
Despesa = TOTAL,
`Despesa 2-9` = `TOTAL 2-9`)
f_despesa_md <- f_despesa_md %>%
mutate(Codigo = as.character(Codigo))
glimpse(f_despesa_md)
f_despesa_md <-  df_despesa_md %>%
select(-c(`SKU REF.`, FA , `ORGAO ORCAMENTARIO`, TITULO, FONTE ))
View(f_despesa_md)
# importação e formatação da tabela de despesa orçamento MD
df_despesa_md <- read_csv("Despesa_por_Un._TipoI.csv")
f_despesa_md <- df_despesa_md %>%
rename(Codigo = SKU,
Despesa = TOTAL,
`Despesa 2-9` = `TOTAL 2-9`)
f_despesa_md <- f_despesa_md %>%
mutate(Codigo = as.character(Codigo))
glimpse(f_despesa_md)
f_despesa_md <-  f_despesa_md %>%
select(-c(`SKU REF.`, FA , `ORGAO ORCAMENTARIO`, TITULO, FONTE ))
View(f_despesa_md)
md_receita_despesa <- left_join(format_df__receita_md, f_despesa_md, by = c("Codigo", "EXERCICIO FINANCEIRO"))
view(md_receita_despesa)
md_receita_despesa %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 12)
vetor_variaveis_selecionadas <- c("Receita", "Despesa", "Despesa 2-9")
estatisticas_orcamento <-  map(md_receita_despesa[vetor_variaveis_selecionadas], ~ summary(.))
estatisticas_orcamento
estatisticas_orcamento <-  map(md_receita_despesa[vetor_variaveis_selecionadas], ~ summary(.), na.rm = T)
estatisticas_orcamento
estatisticas_orcamento  %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 12)
View(estatisticas_orcamento)
View(estatisticas_orcamento)
estatisticas_orcamento <-  map(md_receita_despesa[vetor_variaveis_selecionadas], ~ summary(.x, na.rm = TRUE))
estatisticas_orcamento
#--------------------Iterações com Purrr----------------------------------------
# Configurar R para evitar notação científica
options(scipen = 999)
vetor_variaveis_selecionadas <- c("Receita", "Despesa", "Despesa 2-9")
estatisticas_orcamento <-  map(md_receita_despesa[vetor_variaveis_selecionadas], ~ summary(.x, na.rm = TRUE))
estatisticas_orcamento
View(estatisticas_orcamento)
View(estatisticas_orcamento)
estatisticas_orcamento
write_csv(format_df__receita_md, "df_receita_md.csv")
write_csv(f_despesa_md, "df_despesa_md.csv")
write_csv(md_receita_despesa, "orcamento_md.csv")
estatisticas_orcamento
view(md_receita_despesa)
tabela <- tibble(
year = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr = (1, 2, 3, 4, 2, 3, 4),
tabela
view(tabela)
tabela <- tibble(
year = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr = (1, 2, 3, 4, 2, 3, 4),
tabela <- tibble(
year = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr = c(1, 2, 3, 4, 2, 3, 4),
return = c(1.88, 1,59, NA, 0.92, 0.17, 2.66)
)
view(tabela)
tabela %>% spread(year, return)
tabela <- tibble(
year = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr = c(1, 2, 3, 4, 2, 3, 4),
return = c(1.88, 1.59, NA, 0.92, 0.17, 2.66)
)
view(tabela)
tabela %>% spread(year, return)
tabela <- tibble(
year = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr = c(1, 2, 3, 4, 2, 3, 4),
return = c(1.88, 1.59, NA, 0.92, 0.17, 2.66)
)
tabela <- tibble(
year = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr = c(1, 2, 3, 4, 2, 3, 4),
return = c(1.88, 0.59, 0.35, NA, 0.92, 0.17, 2.66)
)
view(tabela)
tabela %>% spread(year, return)
md_receita_despesa %>% spread(`1-Pessoal e Encargos Sociais`)
tabela %>%complete(year, qtr)
md_receita_despesa %>% complete(`1-Pessoal e Encargos Sociais`)
md_receita_despesa %>% summarise(across(everything(), ~ sum(is.na(.))))
# Exemplo de dataframe
df <- data.frame(
a = c(1, 2, NA, 4),
b = c("x", NA, "y", "z"),
c = c(NA, NA, 1, 2)
)
# Contar o número de NAs em cada coluna
na_count <- df %>% summarise(across(everything(), ~ sum(is.na(.))))
print(na_count)
# Identificar linhas com NAs
rows_with_na <- df %>% filter(if_any(everything(), is.na))
print(rows_with_na)
qtd_na <- md_receita_despesa %>% summarise(across(everything(), ~ sum(is.na(.))))
print(qtd_na)
View(qtd_na)
View(qtd_na)
View(qtd_na)
linhas_na <- md_receita_despesa %>%
filter(if_any(everything(), is.na))
print(linhas_na)
View(linhas_na)
View(linhas_na)
linhas_vazias <- md_receita_despesa %>%
filter(if_any(everything(), ~ . == ""))
print(linhas_vazias)
View(linhas_vazias)
View(linhas_vazias)
linhas_vazias <- md_receita_despesa %>%
filter(if_ally(everything(), ~ . == ""))
print(linhas_vazias)
View(linhas_vazias)
View(linhas_vazias)
print( md_receita_despesa %>%
filter(if_ally(everything(), ~ . == "")))
print( md_receita_despesa %>%
filter(if_all(everything(), ~ . == "")))
View( md_receita_despesa %>%
filter(if_all(everything(), ~ . == "")))
View(linhas_na)
md_receita_despesa <- md_receita_despesa %>%
filter(!is.na(x))
md_receita_despesa <- md_receita_despesa %>%
filter(!is.na(everything()))
md_receita_despesa <- md_receita_despesa %>%
filter(!is.na())
md_receita_despesa <- md_receita_despesa %>%
filter(complete.cases(.))
View(linhas_na)
linhas_na <- md_receita_despesa %>%
filter(if_any(everything(), is.na))
View(linhas_na)
view(md_receita_despesa)
tabela %>%complete.cases(year, qtr)
tabela <- tibble(
year = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr = c(1, 2, 3, 4, 2, 3, 4),
return = c(1.88, 0.59, 0.35, NA, 0.92, 0.17, 2.66)
)
View(tabela %>%complete.cases(year, qtr))
View(tabela %>%complete.cases(year))
df_enriquecido <- md_receita_despesa %>%
mutate(
p_receita = Receita / sum(Receita),
p_despesa = Despesa / sum(Despesa)
) %>%
mutate(
cat_receita = cut(p_receita,
breaks = quantile(p_receita, probs = 0:5/5),
labels = c("muito baixo", "baixo", "medio", "alto", "muito alto"),
include.lowest = TRUE),
cat_despesa = cut(p_despesa,
breaks = quantile(prop_despesa, probs = 0:5/5, na.rm = TRUE),
labels = c("muito baixo", "baixo", "médio", "alto", "muito alto"),
include.lowest = TRUE)
)
df_enriquecido <- md_receita_despesa %>%
mutate(
p_receita = Receita / sum(Receita),
p_despesa = Despesa / sum(Despesa)
) %>%
mutate(
cat_receita = cut(p_receita,
breaks = quantile(p_receita, probs = 0:5/5),
labels = c("muito baixo", "baixo", "medio", "alto", "muito alto"),
include.lowest = TRUE),
cat_despesa = cut(p_despesa,
breaks = quantile(p_despesa, probs = 0:5/5, na.rm = TRUE),
labels = c("muito baixo", "baixo", "médio", "alto", "muito alto"),
include.lowest = TRUE)
)
View(df_enriquecido)
df_enriquecido <- md_receita_despesa %>%
mutate(
cat_receita = cut(Receita,
breaks = quantile(Receita / sum(Receita), probs = 0:5/5),
labels = c("muito baixo", "baixo", "medio", "alto", "muito alto"),
include.lowest = TRUE),
cat_despesa = cut(Despesa,
breaks = quantile(Despesa / sum(Despesa), probs = 0:5/5, na.rm = TRUE),
labels = c("muito baixo", "baixo", "médio", "alto", "muito alto"),
include.lowest = TRUE)
)
View(df_enriquecido)
df_enriquecido <- md_receita_despesa %>%
mutate(
`Categoria Receita` = cut(Receita,
breaks = quantile(Receita / sum(Receita), probs = 0:5/5),
labels = c("muito baixo", "baixo", "medio", "alto", "muito alto"),
include.lowest = TRUE),
`Categoria Despesa` = cut(Despesa,
breaks = quantile(Despesa / sum(Despesa), probs = 0:5/5, na.rm = TRUE),
labels = c("muito baixo", "baixo", "médio", "alto", "muito alto"),
include.lowest = TRUE)
)
View(df_enriquecido)
df_enriquecido <- md_receita_despesa %>%
mutate(
`Categoria Receita` = cut(Receita,
breaks = quantile(Receita / sum(Receita), probs = 0:5/5),
labels = c("muito baixo", "baixo", "medio", "alto", "muito alto"),
include.lowest = TRUE),
`Categoria Despesa` = cut(Despesa,
breaks = quantile(Despesa / sum(Despesa), probs = 0:5/5, na.rm = TRUE),
labels = c("muito baixo", "baixo", "médio", "alto", "muito alto"),
include.lowest = TRUE)
)
View(df_enriquecido)
cat_receita
df_enriquecido <- md_receita_despesa %>%
mutate(
cat_receita = cut(Receita,
breaks = quantile(Receita / sum(Receita), probs = 0:5/5),
labels = c("muito baixo", "baixo", "medio", "alto", "muito alto"),
include.lowest = TRUE),
cat_despesa = cut(Despesa,
breaks = quantile(Despesa / sum(Despesa), probs = 0:5/5, na.rm = TRUE),
labels = c("muito baixo", "baixo", "médio", "alto", "muito alto"),
include.lowest = TRUE)
)
View(df_enriquecido)
df_enriquecido <- md_receita_despesa %>%
mutate(
`Categoria Receita` = cut(Receita / sum(Receita, na.rm = TRUE),
breaks = quantile(Receita / sum(Receita), probs = 0:5/5),
labels = c("muito baixo", "baixo", "medio", "alto", "muito alto"),
include.lowest = TRUE),
`Categoria Despesa` = cut(Despesa / sum(Despesa, na.rm = TRUE),
breaks = quantile(Despesa / sum(Despesa), probs = 0:5/5, na.rm = TRUE),
labels = c("muito baixo", "baixo", "médio", "alto", "muito alto"),
include.lowest = TRUE)
)
View(df_enriquecido)
#--------------------Entendimento do Dataset-----------------------------------------------
#estrutura da base de dados
glimpse(df_receita_orcamento_md)
ggplot(df_receita_orcamento_md, aes(x = `ORGAO ORCAMENTARIO`, y = VALOR)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Distribuição Orçamentária por Órgão", x = "Órgão Orçamentário", y = "Valor Orçamentário")
ggplot(df_receita_orcamento_md, aes(x = `ORGAO ORCAMENTARIO`, y = VALOR)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Distribuição Orçamentária por Órgão", x = "Órgão Orçamentário", y = "Valor Orçamentário")
top7_orgaos <- df_receita_orcamento_md %>%
group_by(`ORGAO ORCAMENTARIO`) %>%
summarise(Total = sum(VALOR)) %>%
arrange(desc(Total)) %>%
top_n(7, Total)
View(top7_orgaos)
View(top7_orgaos)
ggplot(top7_orgaos, aes(x = reorder(`ORGAO ORCAMENTARIO`, Total), y = Total)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Top 7 Órgãos Orçamentários por Valor Total", x = "Órgão Orçamentário", y = "Valor Total Orçamentário")
top7_orgaos <- df_receita_orcamento_md %>%
group_by(`ORGAO ORCAMENTARIO`) %>%
summarise(Total = sum(VALOR)) %>%
arrange(Total) %>%
top_n(7, Total)
ggplot(top7_orgaos, aes(x = reorder(`ORGAO ORCAMENTARIO`, Total), y = Total)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Top 7 Órgãos Orçamentários por Valor Total", x = "Órgão Orçamentário", y = "Valor Total Orçamentário")
top7_orgaos <- df_receita_orcamento_md %>%
group_by(`ORGAO ORCAMENTARIO`) %>%
summarise(Total = sum(VALOR)) %>%
arrange(Total) %>%
top_n(7, Total)
ggplot(top7_orgaos, aes(x = reorder(`ORGAO ORCAMENTARIO`, Total), y = Total)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Top 7 Órgãos Orçamentários por Valor Total", x = "Órgão Orçamentário", y = "Valor Total Orçamentário")
df_sum <- df_receita_orcamento_md %>%
group_by(FA) %>%
summarise(Total = sum(VALOR))
ggplot(df_sum, aes(x = "", y = Total, fill = FA)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(fill = "Força Armada", title = "Proporção Orçamentária por Força Armada")
df_sum <- df_receita_orcamento_md[-c(DEFESA)]  %>%
group_by(FA) %>%
summarise(Total = sum(VALOR))
df_sum <- df_receita_orcamento_md %>%
group_by(FA) %>%
summarise(Total = sum(VALOR))
ggplot(df_sum, aes(x = "", y = Total, fill = FA)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(fill = "Força Armada", title = "Proporção Orçamentária por Força Armada")
ggplot(df_sum, aes(x = "", y = Total, fill = FA)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(fill = "Força Armada", title = "Proporção Orçamentária por Força Armada")
df_sum <- df_receita_orcamento_md %>%
group_by(FA) %>%
summarise(Total = sum(VALOR))
ggplot(df_sum, aes(x = "", y = Total, fill = FA)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(fill = "Força Armada", title = "Proporção Orçamentária por Força Armada")
ggplot(df_sum, aes(x = "", y = Total, fill = FA)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(fill = "Força Armada", title = "Proporção Orçamentária por Força Armada")
ggplot(df_receita_orcamento_md, aes(x = `EXERCICIO FINANCEIRO`, y = VALOR, group = FA, color = FA)) +
geom_line() +
labs(title = "Tendência de Valores Orçamentários por Ano e Força Armada", x = "Exercício Financeiro", y = "Valor")
ggplot(df_receita_orcamento_md, aes(x = SKU, y = VALOR)) +
geom_point(aes(color = FA)) +
labs(title = "Relação entre SKU e Valor Orçamentário", x = "SKU", y = "Valor")
ggplot(df_receita_orcamento_md, aes(x = SKU, y = VALOR)) +
geom_point(aes(color = FA)) +
labs(title = "Relação entre SKU e Valor Orçamentário", x = "SKU", y = "Valor")
# Gráfico de pizza
ggplot(df_sum, aes(x = "", y = Total, fill = FA)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(fill = "Força Armada", title = "Proporção Orçamentária por Força Armada")
# Gráfico de pizza
ggplot(df_sum, aes(x = "", y = Total, fill = FA)) +
geom_bar(width = 1, stat = "classic") +
coord_polar("y", start = 0) +
labs(fill = "Força Armada", title = "Proporção Orçamentária por Força Armada")
# Gráfico de pizza
ggplot(df_sum, aes(x = "", y = Total, fill = FA)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(fill = "Força Armada", title = "Proporção Orçamentária por Força Armada")
ggplot(top7_orgaos, aes(x = reorder(`ORGAO ORCAMENTARIO`, Total), y = Total)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Top 7 Órgãos Orçamentários por Valor Total", x = "Órgão Orçamentário", y = "Valor Total Orçamentário")
ggplot(top7_orgaos, aes(x = reorder(`ORGAO ORCAMENTARIO`, Total), y = Total)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(title = "Top 7 Órgãos Orçamentários por Valor Total", x = "Órgão Orçamentário", y = "Valor Total Orçamentário")
#visualizar para entendimento a soma dos valores das receitas da DEFESA.
print(df_receita_orcamento_md %>% filter(FA == "DEFESA") %>% summarise(media = sum(VALOR)))
#visualizar para entendimento a soma dos valores das receitas da DEFESA.
print(df_receita_orcamento_md %>% filter(FA == "DEFESA") %>% summarise(media = sum(VALOR)))
df_receita_orcamento_md %>% filter(FA == "DEFESA") %>% summarise(media = sum(VALOR))
library(tidyverse)
library(data.table)
library(kableExtra)
library(stringr)
#visualizar para entendimento a soma dos valores das receitas da DEFESA.
print(df_receita_orcamento_md %>% filter(FA == "DEFESA") %>% summarise(media = sum(VALOR)))
glimpse(format_df__receita_md)
unique(format_df__receita_md$FA)
unique(format_df__receita_md$Referencia)
unique(format_df__receita_md$`ORGAO ORCAMENTARIO`)
unique(format_df__receita_md$TITULO)
unique(format_df__receita_md$FONTE)
unique(format_df__receita_md$`EXERCICIO FINANCEIRO`)
freq_Orcament <- format_df__receita_md %>%
count(`ORGAO ORCAMENTARIO`, FA, name = 'contagem')
freq_Orcament %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 12)
#filtro de exercício financeiro a partir de 2022, e Receita maior que a média do Exército, agrupado pela Força Armada
format_df__receita_md %>%
group_by(FA) %>%
filter(`EXERCICIO FINANCEIRO`>= 2022 & Receita > 483513773) %>%
ungroup()
# As 10% maiores receitas
format_df__receita_md %>%  slice_max(order_by = Receita, prop = 0.10)
vetor_variaveis_selecionadas <- c("Receita", "Despesa", "Despesa 2-9")
# O argumento na.rm = T solicita a remoção de NAs antes de fazer as contas (T é TRUE)
# O ~ indica que trata-se de uma função, ou seja, escreveremos uma função
estatisticas_orcamento <-  map(md_receita_despesa[vetor_variaveis_selecionadas], ~ summary(.x, na.rm = TRUE))
estatisticas_orcamento
qtd_na <- md_receita_despesa %>% summarise(across(everything(), ~ sum(is.na(.))))
print(qtd_na)
linhas_na <- md_receita_despesa %>%
filter(if_any(everything(), is.na))
View(linhas_na)
View( md_receita_despesa %>%
filter(if_all(everything(), ~ . == "")))
md_receita_despesa <- md_receita_despesa %>%
filter(complete.cases(.))
view(md_receita_despesa)
view(md_receita_despesa)
